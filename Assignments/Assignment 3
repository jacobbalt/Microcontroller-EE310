//---------------------
// Title: ASSIGNMENT 7
//---------------------
//Program Details: Build calculator using C and a 4x4 keypad
// 
//-------	
// Purpose: to learn how to interface a keypad to output an arithmetic function
//          to 8 bit LEDs.
//
// File Dependencies / Libraries: None 
// Compiler: ASM 2.4
// Author: JACOB BALTIERREZ
// Outputs: PORTD0,1,2,3,4,5,6,7
// Inputs: PORTB0,1,2,3,4,5,6,7
// Date: APRIL 7, 2024
// Versions:
//       V1.0: 4/7/2024 - First Version
//      V2.0: 4/14/2024 - Final Version: working version
//      added delays between inputs in main, made minor changes for debouncing
//	
//
//---------------------
// PIC18F46K42 Configuration Bit Settings

// 'C' source line config statements

#include <xc.h> // must have this
//#include "../../../../../Program Files/Microchip/xc8/v2.40/pic/include/proc/pic18f46k42.h"
#include "/Applications/microchip/xc8/v2.46/pic/include/proc/pic18f47k42.h"
//#include "C:\Program Files\Microchip\xc8\v2.40\pic\include\proc\pic18f46k42"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#include "Cheader.h"

#define _XTAL_FREQ 4000000                 // Fosc  frequency for _delay()  library
#define FCY    _XTAL_FREQ/4

int number;
void initialize (void){
    PORTB = 0x00;
    LATB = 0x00;
    ANSELB = 0x00;
    TRISB = 0xF0;
    
    PORTD = 0x00;
    LATD = 0x00;
    ANSELD = 0x00;
    TRISD = 0x00;
}

int keyboard ()
{
        
   number = -1; 
     PORTBbits.RB0 = 1;
             if(PORTBbits.RB4==1){
                 __delay_ms(200);
                 number = 1;
             }
             if(PORTBbits.RB5==1){
                 __delay_ms(200);
                 number = 4;
             }
             if(PORTBbits.RB6==1){
                 __delay_ms(200);
                 number  =7;
             }
             if(PORTBbits.RB7==1){
                  __delay_ms(200);
                 number = 20; //* not used
             }
             PORTBbits.RB0=0;

         PORTBbits.RB1 = 1;
             if(PORTBbits.RB4==1){
                 __delay_ms(200);
                 number = 2;
             }
             if(PORTBbits.RB5==1){
                 __delay_ms(200);
                 number = 5;
             }
             if(PORTBbits.RB6==1){
                  __delay_ms(200);
                 number = 8;
             }
             if(PORTBbits.RB7==1){
                  __delay_ms(200);
                 number = 0;
             }
             PORTBbits.RB1=0;

         PORTBbits.RB2=1;
             if(PORTBbits.RB4==1){
                  __delay_ms(200);
                 number = 3;
             }
             if(PORTBbits.RB5==1){
                 __delay_ms(200);
                 number = 6;
             }
             if(PORTBbits.RB6==1){
                  __delay_ms(200);
                 number = 9;
             }
             if(PORTBbits.RB7==1){
                 __delay_ms(200);
                 number = 15; //equal '#'
             }
             PORTBbits.RB2=0;

         PORTBbits.RB3=1;

             if(PORTBbits.RB4==1){
                 __delay_ms(200);
                 number = 10; //+
             }
             if(PORTBbits.RB5==1){
                 __delay_ms(200);
                 number = 11; //-
             }
             if(PORTBbits.RB6==1){
                  __delay_ms(200);
                 number = 12; //*
             }
             if(PORTBbits.RB7==1){
                  __delay_ms(200);
                 number = 13;  // /
             }
             PORTBbits.RB3=0;


             return number;
             
    }



char action(int X_Input_Reg,int Operation_Reg,int Y_Input_Reg){
    signed char result;
    
    if(Operation_Reg == 10) //+ add
        result = X_Input_Reg + Y_Input_Reg;
    if(Operation_Reg == 11) // - subtract
        result = X_Input_Reg - Y_Input_Reg;
    if(Operation_Reg == 12) // * multiply
        result = X_Input_Reg * Y_Input_Reg;
    if(Operation_Reg == 13) // / divide
        result = X_Input_Reg / Y_Input_Reg;
    if(Operation_Reg == 20) // clear
        result = 0;
    return result;
}
char main (signed char result)
{
int X_Input_Reg;
int X1_Input_Reg;
int X2_Input_Reg;
int Y_Input_Reg;
int Y1_Input_Reg;
int Y2_Input_Reg;
int Operation_Reg;

    initialize();

    while(1){
        X_Input_Reg = -1;
        X1_Input_Reg = -1;
        X2_Input_Reg = -1;
        Y_Input_Reg = -1;
        Y1_Input_Reg = -1;
        Y2_Input_Reg = -1;
        Operation_Reg = -1;
        number = -1;
        while(X_Input_Reg == -1){
            
            while(X1_Input_Reg == -1){
                //X1_Input_Reg = keyboard(number);
                keyboard();
                X1_Input_Reg = number;
                __delay_ms(100); 
            }
            //PORTDbits.RD4=0;
            while(X2_Input_Reg == -1){
                keyboard();
                X2_Input_Reg = number;
                __delay_ms(100);
            }
            
            X_Input_Reg = (X1_Input_Reg * 10) + X2_Input_Reg;
            PORTD = X_Input_Reg;
            number = -1;
        }
        while(Operation_Reg <= 9){
            keyboard();
            Operation_Reg = number;
            __delay_ms(100);
        } //get operator from input
        //number = -1;
        while(Y_Input_Reg == -1){
            while(Y1_Input_Reg == -1){
                keyboard();
                Y1_Input_Reg = number;
                __delay_ms(100);
            }
            while(Y2_Input_Reg == -1){
                keyboard();
                Y2_Input_Reg = number;
                __delay_ms(100);
            }
            Y1_Input_Reg = Y1_Input_Reg * 10; //take 2 numbers
            Y_Input_Reg = Y1_Input_Reg + Y2_Input_Reg;        
            PORTD = 0;
            PORTD = Y_Input_Reg;
        }
        __delay_ms(200);
        result = action(X_Input_Reg,Operation_Reg,Y_Input_Reg);
        while(number !=15){
            keyboard();
            __delay_ms(100);
        }
        
        PORTD = result; //output result
               //result = Display_Result_Reg;     //outputs to PORTD in binary
        __delay_ms(200);
        while(Operation_Reg != 20)
        {
            keyboard();
                Operation_Reg = number;
                __delay_ms(100);
        }
        PORTD = 0x00; //clear
  }
}
//  test if keypad works
//    number = -1;
//    if(number == -1){
//        while(number == -1){
//        keyboard();
//        //PORTD = number;
//    }
//        PORTD = number;
//    }
//    while(number != 20){
//        keyboard();
//    }
//    PORTD = 0x00;
    
//signed int dec2bin(signed int num){
//    int binary[8];
//    int Display_Result_Reg[8];
//    int i = 0;
//    while(num > 0){
//        binary[i] = num % 2;
//        num = num / 2;
//        i++;
//    }
//        //Display_Result_Reg = binary;
//}
//void SerTX(unsigned char x);
//void RBIF_ISF(void);
//void MSDelay(unsigned int millisecs);
//unsigned char keypad[4][4] = {  '1','2','3','A',
//                                '4','5','6','B',
//                                '8','9','A','C',
//                                '*','0','#','D'};
//
// no delay for testing
//        PORTBbits.RB0 = 1;
//             if(PORTBbits.RB4==1){
//                 number = 1;
//             }
//             if(PORTBbits.RB5==1){
//                 number = 4;
//             }
//             if(PORTBbits.RB6==1){
//                 number  =7;
//             }
//             if(PORTBbits.RB7==1){
//                 number = 20; //* not used
//             }
//             PORTBbits.RB0=0;
//
//         PORTBbits.RB1 = 1;
//             if(PORTBbits.RB4==1){
//                 number = 2;
//             }
//             if(PORTBbits.RB5==1){
//                 number = 5;
//             }
//             if(PORTBbits.RB6==1){
//                 number = 8;
//             }
//             if(PORTBbits.RB7==1){
//                 number = 0;
//             }
//             PORTBbits.RB1=0;
//
//         PORTBbits.RB2=1;
//             if(PORTBbits.RB4==1){
//                 number = 3;
//             }
//             if(PORTBbits.RB5==1){
//                 number = 6;
//             }
//             if(PORTBbits.RB6==1){
//                 number = 9;
//             }
//             if(PORTBbits.RB7==1){
//                 number = 15; //equal '#'
//             }
//             PORTBbits.RB2=0;
//
//         PORTBbits.RB3=1;
//
//             if(PORTBbits.RB4==1){
//                 number = 10; //+
//             }
//             if(PORTBbits.RB5==1){
//                 number = 11; //-
//             }
//             if(PORTBbits.RB6==1){
//                 number = 12; //*
//             }
//             if(PORTBbits.RB7==1){
//                 number = 13;  // /
//             }
//             PORTBbits.RB3=0;
